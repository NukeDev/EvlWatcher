<Window x:Class="EvlWatcherConsole.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:e="clr-namespace:EvlWatcherConsole"
        Title="EvlWatcher v2.0 Console" Height="550" Width="725" Icon="pack://application:,,,/RES/EvlWatcher.ico" WindowStyle="ThreeDBorderWindow">
    <Window.DataContext>
        <e:EvlWatcherController/>
    </Window.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="265*"/>
            <ColumnDefinition Width="452*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="40"></RowDefinition>
        </Grid.RowDefinitions>
        <TabControl Grid.ColumnSpan="2">
            <TabItem Header="Firewall Settings">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Margin="5,5,5,5" Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="30"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label>temporarily banned IPs:</Label>
                        <ListView Grid.Row="1" SelectedItem="{Binding SelectedTemporaryIP}" IsEnabled="{Binding IsRunning}" ItemsSource="{Binding TemporarilyBannedIPs}">

                        </ListView>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="30"></ColumnDefinition>
                                <ColumnDefinition Width="30"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="1" Command="{Binding MoveTemporaryToPermaCommand}" Margin="5,5,5,5" Grid.Row="2" IsEnabled="{Binding IsRunning}">
                                <Image Source="pack://application:,,,/RES/lock_32.ico"></Image>
                            </Button>
                            <Button Grid.Column="2" Command="{Binding MoveTemporaryToWhiteListCommand}" Margin="5,5,5,5" Grid.Row="2" IsEnabled="{Binding IsRunning}">
                                <Image Source="pack://application:,,,/RES/lock_open_32.ico"></Image>
                            </Button>
                        </Grid>
                    </Grid>
                    <Grid Margin="5,5,5,5" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="30"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label>permanently banned IPs:</Label>
                        <ListView Grid.Row="1" SelectedItem="{Binding SelectedPermanentIP}" IsEnabled="{Binding IsRunning}" ItemsSource="{Binding PermanentlyBannedIPs}"></ListView>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="30"></ColumnDefinition>
                                <ColumnDefinition Width="30"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBox Text="{Binding PermaBanIPString, UpdateSourceTrigger=PropertyChanged}" Margin="5,5,5,5"></TextBox>
                            <Button Grid.Column="1" Command="{Binding AddPermaBanCommand}" Margin="5,5,5,5" Grid.Row="2" IsEnabled="{Binding IsRunning}">
                                <Image Source="pack://application:,,,/RES/add_32.ico"></Image>
                            </Button>
                            <Button Grid.Column="2" Command="{Binding RemovePermaBanCommand}" Margin="5,5,5,5" Grid.Row="2" IsEnabled="{Binding IsRunning}">
                                <Image Source="pack://application:,,,/RES/close_32.ico"></Image>
                            </Button>
                        </Grid>
                    </Grid>
                    <Grid Margin="5,5,5,5" Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="30"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label>white-listed IP Patterns:</Label>
                        <ListView Grid.Row="1" SelectedItem="{Binding SelectedWhiteListPattern}" IsEnabled="{Binding IsRunning}" ItemsSource="{Binding WhiteListedIPs}"></ListView>
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="30"></ColumnDefinition>
                                <ColumnDefinition Width="30"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBox Text="{Binding WhiteListFilter, UpdateSourceTrigger=PropertyChanged}" Margin="5,5,5,5"></TextBox>
                            <Button Grid.Column="1" Command="{Binding AddWhiteListFilterCommand}" Margin="5,5,5,5" Grid.Row="2" IsEnabled="{Binding IsRunning}">
                                <Image Source="pack://application:,,,/RES/add_32.ico"></Image>
                            </Button>
                            <Button Grid.Column="2" Command="{Binding RemoveWhiteListFilterCommand}" Margin="5,5,5,5" Grid.Row="2" IsEnabled="{Binding IsRunning}">
                                <Image Source="pack://application:,,,/RES/close_32.ico"></Image>
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Live" ToolTip="Test">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="40"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label>Showing recent console output of the service:</Label>
                    <TextBox Grid.Row="1" Background="Black" Foreground="Green" FontFamily="Courier" IsReadOnly="True">

                    </TextBox>
                    <StackPanel  Grid.Row="2" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"> Console verbosity: </Label>
                        <ComboBox VerticalAlignment="Center" Width="100" Margin="5" Text="Verbosity" SelectedValue="Critical">
                            <ComboBoxItem>Critical</ComboBoxItem>
                            <ComboBoxItem>Error</ComboBoxItem>
                            <ComboBoxItem>Warning</ComboBoxItem>
                            <ComboBoxItem>Info</ComboBoxItem>
                            <ComboBoxItem>Verbose</ComboBoxItem>
                            <ComboBoxItem>Debug</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
        <StatusBar Grid.Row="1" Grid.ColumnSpan="2">
            <StatusBarItem>
                <Label IsEnabled="{Binding IsRunning}">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                    <Setter Property="Content" Value="Service is currently responding." />
                                    <Setter Property="Foreground" Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsRunning}" Value="False">
                                    <Setter Property="Content" Value="Service is currently not responding." />
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
